import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';

// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
class S implements WidgetsLocalizations {
	const S();

	static S current;

	static const GeneratedLocalizationsDelegate delegate = GeneratedLocalizationsDelegate();

	static S of(BuildContext context) => Localizations.of<S>(context, S);

	@override
	TextDirection get textDirection => TextDirection.ltr;

	String get action_settings => "Settings";
	String get ad_account_id => "ca-app-pub-6696437403163667~6953226633";
	String get banner_ad_unit_id => 'ca-app-pub-6696437403163667/5982516625';
	String get interstitial_plot_gen => 'ca-app-pub-6696437403163667/3046586854';
	String get reward_ad_plot_gen => 'ca-app-pub-6696437403163667/2030936311';
	String get reward_ad_challenge => 'ca-app-pub-6696437403163667/6917012049';

	String get add_char => "Add Character";
	String get add_character_btn => "Add Character";
	String get add_projects_btn => "Add project";
	String get age_bio_1 => "is";
	String get age_bio_2 => "years old.";
	String get antagonist_guide_array_desc_0 => "Quite often in literature, the antagonist is simply the opposite of the hero/protagonist. For example, if your protagonist is brash and hotheaded, then the antagonist is calm and very much in control of their emotions. The contrast between the two helps to create a compelling conflict and makes interactions more interesting.\nBut beware, their opposition is not just in their tactics to reach their goals, it's deeper than that, it goes all the way to their nature, in a way that the ultimate battle among them it's unavoidable since the first line of your story.";
	String get antagonist_guide_array_desc_1 => "As tempting as it might be, do not make your antagonist the epitome of evil. Why not? Because it's boring and unrealistic. How many people have you met in your life that are absolutely evil? Probably zero. No matter how wicked someone is, you can always find some redeeming quality in their character.\nGive your antagonist some good qualities and show them in a positive light during some scenes/chapters. This will create a sharp contrast when they inevitably act upon their evil desires and whatever they do will seem even more terrible than it would have if you had portrayed them as a purely evil being.\nTo give your antagonist even more depth, explore their background. Was he once a good person? Had he always have evil tendencies? What happened to him to be so hateful? Adding those layers to your antagonist will allow your reading be also compelled about your antagonist and truly believe your play.";
	String get antagonist_guide_array_desc_2 => "There is no play if your antagonist is not at least as strong as your protagonist. In fact, many great plays starts from the other end, it's the protagonist who has to grow their skills in order to match the evil antagonist. Failing to have a powerful antagonist in your play will result in a boring clash and a boring play as there is no actual challenge for the protagonist.Make youre antagonist perform truly despicable actions and if possible you may also want your protagonist to lose a couple of battles before the last one, when he show us how far he went to defeat the antagonist.";
	String get antagonist_guide_array_desc_3 => "What's the goal of your antagonist? What is the purpose behind all of the trouble that they are causing? Don't be tempted to explain that their wicked deeds are simply a product of their evil nature. People don't just randomly do bad things. They usually have a reason for their actions. Come up with a strong motivation and your character becomes that much more believable.";
	String get antagonist_guide_array_desc_count => "4";
	String get antagonist_guide_array_titles_0 => "Antagonists are the exact opposite of your protagonist";
	String get antagonist_guide_array_titles_1 => "Antagonists are complex";
	String get antagonist_guide_array_titles_2 => "Antagonists are tough opponents";
	String get antagonist_guide_array_titles_3 => "The Antagonist has a strong motive";
	String get antagonist_guide_array_titles_count => "4";
	String get antagonist_guide_desc => "How antagonists are made?";
	String get antagonist_guide_desc_long => "Lajos Egri discuss in his book 'The art of dramatic writing' the importance of Unity of Opposites. Meaning that if Batman wants order then the Joker wants chaos, if Gandalf wants peace, then Sauron wants war.Unity of opposites refers to the fact that both, the protagonist and the antagonist wants the exactly opposite and that's why they clash. Failing to apply this concept in your antagonist will make him boring or not realistic. Dig in to understand better how a good antagonists are made.";
	String get antagonist_guide_title => "The anatomy of the perfect Antagonist";
	String get app_name => "Auctor";

	String get binary_desire_bio => "In their mind they want ";
	String get binary_moment_bio => "About their childhood we know that they";
	String get binary_need_bio => "But is that what they really want? Or they actually need";
	String get binary_phrase_bio => "A phrase that people will commonly associate with them is";
	String get binary_trait_bio => "Also their friends says that they are";
	String get biocontainer_challenge => "Challenges";
	String get biocontainer_challenge_empty => "A character biography is simply not enough to discover who your character really is.\n\nPut your character under pressure and walk him through different situations to see how he reacts.";
	String get biocontainer_character => "Character";
	String get bodybuild_bio => "One could say that looks rather";
	String get bodytypes_0 => "Skinny";
	String get bodytypes_1 => "Lean";
	String get bodytypes_2 => "Muscular";
	String get bodytypes_3 => "Chubby";
	String get bodytypes_4 => "Fit";
	String get bodytypes_count => "5";
	String get c1_antagonist_bio_desc_1 => "How is the Antagonist the exact opposite of your Protagonist?";
	String get c1_antagonist_bio_desc_2 => "What's his/her goal?";
	String get c1_antagonist_bio_desc_3 => "What are the tactics he/she uses to reach his/her goals?";
	String get c1_antagonist_bio_desc_4 => "What about the change arc?";
	String get c1_antagonist_bio_subtitle => "Antagonist are not just the source of all evil. They actually have a reason to exist";
	String get c1_antagonist_bio_title => "Know your Antagonist.";
	String get c1_antagonist_desc => "Know your Antagonist.";
	String get c1_antagonist_desc_long => "Stories are a power play. Nobody cares about the journey of 'Mr I can do everything', if your protagonist is not facing some sort of obstacle that prevent him to get what he wants, then there is no challenge, and no challenge means no growth, which resumes to no story at all. However just adding obstacles for the sake of story is not a good practice either. Dig in to understand better who your antagonist really is, and what's his real role on your story";
	String get c1_antagonist_q1 => "The antagonist is the exact opposite of your protagonist. How in this case?";
	String get c1_antagonist_q2 => "Your Antagonist is not just evil, he doesn't want to destroy the protagonist, unless this one gets on his way. So what is your Antagonist's ultimate goal?";
	String get c1_antagonist_q3 => "What are the tactics he uses to reach his goals?";
	String get c1_antagonist_q4 => "Think about the arc of change of your Antagonist. Does he start bad and ends bad? Not a great arc, then no? So how he is in Act 1, how he is in Act 3?";
	String get c1_antagonist_title => "Antagonist Challenge";
	String get c1_mentor_bio_desc_1 => "Why the protagonist needs a mentor? Why it has to be";
	String get c1_mentor_bio_desc_2 => "How he will mentor the protagonist?";
	String get c1_mentor_bio_desc_3 => "Will the mentor give an artifact? Which one?";
	String get c1_mentor_bio_desc_4 => "When during your story the mentor will depart?";
	String get c1_mentor_bio_subtitle => "Not all mentors behave the same, neither teach or guide in the same way. What about yours?";
	String get c1_mentor_bio_title => "Know your mentor.";
	String get c1_mentor_desc => "Know your mentor.";
	String get c1_mentor_desc_long => "Mentors are a rare type of characters. Not all the stories has one, but when they do, it has to be for a reason.\nWhat was Yoda motive to teach Luke Skywalker? Who put him on that swamp waiting to be discover? Did he only offered knowledge or also an artifact? Was this artifact the source of Luke's power? Dive in to find out about your mentor.";
	String get c1_mentor_q1 => "Why your protagonist needs a mentor? Why this particular one, will be exactly what he needs?";
	String get c1_mentor_q2 => "Will the mentor give knowledge to the protagonist? Or he will help him to discover himself?";
	String get c1_mentor_q3 => "Will your protagonist power be unlocked by an artifact given by the mentor? If so, which power and which artifact?";
	String get c1_mentor_q4 => "Mentors die. As part of any dramatic journey, the mentor usually has to go a bit before the protagonist is actually ready. Or perhaps he is but he doesn't know it yet.\nAt which moment your mentor will leave or die? How will that be?";
	String get c1_mentor_title => "Mentor Challenge";
	String get c1_sidekick_bio_desc_1 => "Why he/she decided to follow your protagonist?";
	String get c1_sidekick_bio_desc_2 => "Why he/she decided to pursue the protagonist goals?";
	String get c1_sidekick_bio_desc_3 => "Tools, Tactics, Weapons";
	String get c1_sidekick_bio_desc_4 => "What's the ultimate effort your sidekick will do for your protagonist?";
	String get c1_sidekick_bio_subtitle => "Who really is your sidekick?";
	String get c1_sidekick_bio_title => "Know your Sidekick.";
	String get c1_sidekick_desc => "Know your Sidekick.";
	String get c1_sidekick_desc_long => "Sidekicks are often underestimated, But could Frodo reach his goal without Sam? Don Quixote was a complete character on his own, but can you imagine him fighting the windmills without Sancho Panza? Sidekicks have a reason to exist. Find your sidekick reason on this challenge.";
	String get c1_sidekick_q1 => "Why your sidekick decides to follow your protagonist?";
	String get c1_sidekick_q2 => "Why the goals of your protagonist are so strong that your sidekick decides to pursue them as well?";
	String get c1_sidekick_q3 => "What are the tools, tactics or weapons that your sidekick provides to your protagonist? How he protects him or defend him?";
	String get c1_sidekick_q4 => "Some sidekicks had a moment when they have to decide, if the protagonist worth their own lives. What's the case in yours? What's the most precious thing your sidekick will risk for your protagonist? Will be his life?";
	String get c1_sidekick_title => "Sidekick Challenge";
	String get cancel => "Cancel";
	String get challenge_1_bio_desc_1 => "What will be his first reaction if he gets stuck in a elevator?";
	String get challenge_1_bio_desc_2 => "Will your character wait to be rescued?";
	String get challenge_1_bio_desc_3 => "If the person next to your character has a panic attack. What will happen?";
	String get challenge_1_bio_desc_4 => "Lastly in the eventuality that just one can escape and the other should wait, what will your character do?";
	String get challenge_1_bio_title => "The elevator challenge:";
	String get challenge_1_desc => "Elevator Challenge";
	String get challenge_1_desc_long => "How does your character reacts in a crisis?\n Let's put him on a elevator with a random stranger. It doesn't matter who.\n Suddenly the elevator gets stuck and they're both trap inside.\n How does he reacts? Is he calm? Does he panic?\nTake the time you need to answer.\nThis exercise will allow you to reflect about your character, how he behaves in limit situations.";
	String get challenge_1_q1 => "What is his first reaction?";
	String get challenge_1_q2 => "Will he wait to be rescued?";
	String get challenge_1_q3 => "The person next to him suddenly panics. Will your character call him down? Will he panic as well?";
	String get challenge_1_q4 => "After more than an hour trapped in the elevator suddendly there is a slit open. Come, says the voice, but I can take only one\nthe other should wait until more help comes. Will your character goes first?";
	String get challenge_1_title => "Challenge I";
	String get challenge_2_bio_desc_1 => "What misconception does your protagonist have about himself of the world?";
	String get challenge_2_bio_desc_2 => "Is the lie making his life miserable when the story starts? If so, how?";
	String get challenge_2_bio_desc_3 => "If not, will the inciting event make him uncomfortable?";
	String get challenge_2_bio_desc_4 => "What are the symptoms of your character's lie? ";
	String get challenge_2_bio_subtitle => "is the foundation for his character arc. This is what’s wrong in his world. Once you know what’s wrong, you then get to set about figuring out how to make it right. ";
	String get challenge_2_bio_title => "The Lie Your Character Believes";
	String get challenge_2_desc => "What's the lie?";
	String get challenge_2_desc_long => "The Change Arc is all about the Lie Your Character Believes. His life may be horrible, or his life may seem pretty great. But, festering under the surface, is the Lie.In order for your character to evolve in a positive way, he has to start out with something lacking in his life, some reason that makes the change necessary. ";
	String get challenge_2_q1 => "What misconception does your protagonist have about himself or the world?";
	String get challenge_2_q2 => "Is the Lie making his life miserable when the story opens? If so, how?";
	String get challenge_2_q3 => "If not, will the Inciting Event and/or the First Plot Point begin to make him uncomfortable as a result of his Lie?";
	String get challenge_2_q4 => "What are the symptoms of your character’s Lie?";
	String get challenge_2_title => "Challenge II";
	String get challenge_3_bio_desc_1 => "His family";
	String get challenge_3_bio_desc_2 => "Best childhood moment?";
	String get challenge_3_bio_desc_3 => "Worst childhood moment?";
	String get challenge_3_bio_desc_4 => "Did he had any friends? What do they say about him?";
	String get challenge_3_bio_subtitle => "Why is your character who he is?";
	String get challenge_3_bio_title => "Backstory";
	String get challenge_3_desc => "Backstory - Find the why!";
	String get challenge_3_desc_long => "Who is your character today is very important, what's his job, what's his passion, etc. Who will he be is the meat of your story. That's what you're telling it. So what about his past? His past is why he is like this. Were his parents divorce? Perhaps his mother was an alcoholic, did his brother died in a tragic accident? Life events shape who we are. Dive in this challenge to fully develop your three-dimensional character.";
	String get challenge_3_q1 => "Describe briefly his close family, mother, father, siblings?. Are they all alive? Are the parents divorced? Happy family perhaps?";
	String get challenge_3_q2 => "What's his best childhood memory?";
	String get challenge_3_q3 => "What's his worst childhood memory?";
	String get challenge_3_q4 => "Did he had any friends when he was a child? How his friends back them will describe him? If he had no friends, why was it?";
	String get challenge_3_title => "Challenge III";
	String get challenge_4_bio_desc_1 => "How your character looks in five words.";
	String get challenge_4_bio_desc_2 => "Birthmarks? Tattoos?";
	String get challenge_4_bio_desc_3 => "Medical conditions? Allergies?";
	String get challenge_4_bio_desc_4 => "About his posture and appearance?";
	String get challenge_4_bio_subtitle => "In a perfect world, how you look shouldn't affect who you're. But guess what? This is not a perfect world.";
	String get challenge_4_bio_title => "How he looks?";
	String get challenge_4_desc => "How he looks?";
	String get challenge_4_desc_long => "Lajos Egri said that part of who you are, it's due to how you look. You don't believe it? Imagine your character was paralyzed when he was a kid, because of that he was all day long in his bed, so he couldn't do much as other kids, like playing outside. At the end he spent most of his time reading and learning new stuff. Odd for a normal kid, but the only life your character knew. Will he be different than other adults when he grows up? A bit smarter perhaps? Dive in to discover how your character looks like";
	String get challenge_4_q1 => "Take a moment to reflect. Jot down 5 adjectives that will describe your character physically";
	String get challenge_4_q2 => "Does he has any birth mark? Tattoos perhaps that will make him unique? ";
	String get challenge_4_q3 => "There is any medical condition? Allergies? Something that manifest physically even if he can hide under his clothes?";
	String get challenge_4_q4 => "Consider his posture a little bit, can you describe it? Also, what about his appearance? Is he neat? Is he tidy? Will you say he is overall good looking?";
	String get challenge_4_title => "Challenge IV";
	String get challenge_5_bio_desc_1 => "How would he react if somebody he loves is in danger?";
	String get challenge_5_bio_desc_2 => "Will he kill?";
	String get challenge_5_bio_desc_3 => "Does he believes that the end justify the means?";
	String get challenge_5_bio_desc_4 => "OK, he doesn't cross his own limits. how does he reacts then?";
	String get challenge_5_bio_subtitle => "Your character can react in different ways, how he chooses to act when somebody he loves is in danger?";
	String get challenge_5_bio_title => "When under pressure";
	String get challenge_5_desc => "Test the limits.";
	String get challenge_5_desc_long => "If coal and diamonds are basically the same thing, what make the coal so common and the diamond so rare?\n Pressure.\nSame is true in characters, do you want to know if your character is just one more in the crowd or is he the unique hero your story needs? Let's put pressure on him and find out who he really is.";
	String get challenge_5_q1 => "How would he react if someone he cares about is in danger?";
	String get challenge_5_q2 => "Will he be able to kill? ";
	String get challenge_5_q3 => "Will your character say that the end justify the means when it's about protecting a loved one?";
	String get challenge_5_q4 => "Let's says he doesn't dare to cross his own limits to save the life a person he cares. What within his limits/boundaries will he do to solve the situation?";
	String get challenge_5_title => "Challenge V";
	String get challenge_6_bio_desc_1 => "When leaving the house, what's in the pockets?";
	String get challenge_6_bio_desc_2 => "Is there a picture in the wallet?";
	String get challenge_6_bio_desc_3 => "About the keychain (Keyring)";
	String get challenge_6_bio_desc_4 => "About the cellphone";
	String get challenge_6_bio_subtitle => "We all have stuff in our pockets, we all care about something before leaving our houses. What is it for your character?";
	String get challenge_6_bio_title => "What's in the pockets?";
	String get challenge_6_desc => "What's in the pockets?";
	String get challenge_6_desc_long => "Whatever you carry with you, speaks in a way about what you care. Will you carry something you don't care? You probably won't. Same it's true for your character. Dive in to discover what he/she has in the pockets, discover what he/she really cares about";
	String get challenge_6_q1 => "Your character its about to leave the house. What will he/she take and put in his pockets? Wallet? Keys? It's a car key? What car does she/he has?";
	String get challenge_6_q2 => "Open the wallet, is there a picture? Who is in the picture? Why it's there? Since when?";
	String get challenge_6_q3 => "Take the keys from his/her pocket, look carefully at the key chain. What is it? Where he/she got it? Was it a gift? Is it a country icon or flag? Which country?";
	String get challenge_6_q4 => "Does he/she carry a cellphone? Does it has battery? or it's always nearly empty when it's time to leave? Is the phone in silent mode? Look closer, what's the phone wall paper?";
	String get challenge_6_title => "Challenge VI";
	String get challenge_7_bio_desc_1 => "What's the most important decision that has to be mame?";
	String get challenge_7_bio_desc_2 => "What are the external consequences of these actions?";
	String get challenge_7_bio_desc_3 => "The internal ones?";
	String get challenge_7_bio_desc_4 => "Philosophically?";
	String get challenge_7_bio_subtitle => "Why do we care if the character dies or fails? If you want the audience to care, it needs to matter";
	String get challenge_7_bio_title => "What's on stake?";
	String get challenge_7_desc => "Stakes";
	String get challenge_7_q2 => "Stakes can be external or physical. Think about what external consequences we will see if the objective is not reached? Will the world explode? A person will die? For instance in the movie \"Brave\" the mother of the protagonist will be forever a bear if the spell is not broken.";
	String get challenge_7_title => "Challenge VII";
	String get challenge_8_bio_desc_1 => "What type of place it's?";
	String get challenge_8_bio_desc_2 => "What's around the place?";
	String get challenge_8_bio_desc_3 => "About the bedroom";
	String get challenge_8_bio_desc_4 => "What can be seen from the windows";
	String get challenge_8_bio_subtitle => "How you lives tells a lot about yourself, your character is no exception on this.";
	String get challenge_8_bio_title => "What about the house?";
	String get challenge_8_desc => "What about the house?";
	String get challenge_8_q3 => "Go to the bedroom, how is it? Is it a double size bed? Is it a single one? Is the bed tidy? do you see anybody on the bed?";
	String get challenge_8_title => "Challenge VIII";
	String get challenge_action_bar => "Challenges";
	String get challenge_answer_placeholder => "Answer…";
	String get challenge_fab => "Challenges";
	String get challenge_nochallenge_placeholder => "You have no challenges yet for this character.";
	String get change_arc_array_desc_0 => "This is the most popular and often the most resonant character arc. The protagonist will start out with varying levels of personal unfulfillment and denial. Over the course of the story, he will be forced to challenge his beliefs about himself and the world, until finally he conquers his inner demons (and, as a result, probably his outer antagonists as well) and ends his arc having changed in a positive way.";
	String get change_arc_array_desc_1 => "Many popular stories feature characters who are already essentially complete unto themselves. They’re already heroes and don’t require any noticeable personal growth to gain the inner strength to defeat the external antagonists. These characters experience little to no change over the course of the story, making their arcs static or “flat.” Sometimes these characters are the catalysts for change in the story world around them, so that we find more prominent growth arcs in the minor characters.";
	String get change_arc_array_desc_2 => "Negative character arcs offer, arguably, more variations that either of the other arcs. However, at their most basic level, the Negative Arc is just a Change Arc flipped on its head. Instead of a character who grows out of his faults into a better person, the Negative Arc presents a character who ends up in a worse state than that in which he began the story.";
	String get change_arc_array_desc_count => "3";
	String get change_arc_array_titles_0 => "The Positive Arc";
	String get change_arc_array_titles_1 => "The Flat Arc";
	String get change_arc_array_titles_2 => "The Negative Arc";
	String get change_arc_array_titles_count => "3";
	String get change_arc_desc => "How to create character's arcs?";
	String get change_arc_desc_long => "Aristotle wrote that story was all about plot, however today we know that plot is all about how characters react to it. Will Indiana Jones react the same to a betrayal than Scarface? Can we assume that what's exciting for Batman maybe boring for Francis Underwood? Characters in same situations react completely differently\nDive in this section to learn more about how characters react to situations and how they change accordingly";
	String get change_arc_title => "Change Arc - K.M Weiland";
	String get char_empty => "I'm sure you are more creative than that...";
	String get char_guide_title => "Typical character Roles";
	String get char_guide_types_desc_0 => "It's the main character of the plot, things happen to him. He drives the action from the beginning to the end of the play, for instance. All stories have at least one main protagonist and , generally, this act motivated by his goal.";
	String get char_guide_types_desc_1 => "It may be confused with the protagonist, however his role is to assist the protagonist to reach his objectives in the play, nothing else.";
	String get char_guide_types_desc_10 => "Sometimes the goal of a Protagonist can be another character. For instance, somebody has been kidnapped and the protagonist has to find him. This character if he doesn't have any other function or role in the play, it can be consider the goal";
	String get char_guide_types_desc_2 => "It doesn't really appears in all the plays however, the sidekick can be seen in many different genres. He is the character that joins and accompany the protagonist on his victories or defeats, he will always help the protagonist on whatever it's needed, from physical to moral support. The sidekick, also is often devoted to the protagonist and will do whatever for him. It may even die.";
	String get char_guide_types_desc_3 => "It's not a mandatory character neither the main one, however it shows up in many novels. Is the one that keeps somethings, it guards it (normally something pretty important and related to the protagonist goal) he will behave as an obstacle for the protagonist to reach his goal.";
	String get char_guide_types_desc_4 => "Another not mandatory character however very strong when it's present. He is the Yoda of Star Wars, or the priest in Count of Montecristo. A character that will guide and transform the protagonist (The Hero) so he will be ready for the final battle, the one that he will have to fight to reach his objetives.";
	String get char_guide_types_desc_5 => "The impact character is a secondary character with a brief show in the scene, but very important. Is about the character that in a given moment of the play, will give the protagonist the final push to keep going; or he may even give him a clue that he can use later (In the climax for instance) to solve something, to find the value he needs, or the clue to find the murder.";
	String get char_guide_types_desc_6 => "In the other side of the table, we find a character that it's the exact opposite of the protagonist: The Antagonist or Villain of the story. This doesn't mean that the antagonist is always bad. However he has a complete opposite goal than the protagonist and he will fight till the end to reach it. With this clash of goals is where you find your conflict.";
	String get char_guide_types_desc_7 => "Just as the protagonist, the Antagonist can have his helper. Better said, Characters that helps the Antagonist to reach his objectives. These are not mandatory characters, of course, but they can be very useful to create your plot.";
	String get char_guide_types_desc_8 => "The skeptic character is the one that doesn't believe in the objectives of the protagonist. We could say, the opposite of the sidekick, he doesn't really put obstacles on the protagonist however he will try to demoralize him.";
	String get char_guide_types_desc_9 => "These kind of characters are somehow similar to the Antagonist's helpers however they act more like jokers, characters that will pop up briefly to complicate or deviate the protagonist from his objective.";
	String get char_guide_types_desc_count => "11";
	String get char_guide_types_titles_0 => "Protagonist";
	String get char_guide_types_titles_1 => "Protagonist's Helper";
	String get char_guide_types_titles_10 => "Goal";
	String get char_guide_types_titles_2 => "Sidekick";
	String get char_guide_types_titles_3 => "Guardian";
	String get char_guide_types_titles_4 => "Mentor";
	String get char_guide_types_titles_5 => "Impact";
	String get char_guide_types_titles_6 => "Antagonist";
	String get char_guide_types_titles_7 => "Antagonist's Helper";
	String get char_guide_types_titles_8 => "Skeptic";
	String get char_guide_types_titles_9 => "Obstacle";
	String get char_guide_types_titles_count => "11";
	String get char_guide_types_titles_for_comparison_0 => "Protagonista";
	String get char_guide_types_titles_for_comparison_1 => "Ayudante de protagonista";
	String get char_guide_types_titles_for_comparison_10 => "Meta";
	String get char_guide_types_titles_for_comparison_11 => "Protagonist's Helper";
	String get char_guide_types_titles_for_comparison_12 => "Protagonist";
	String get char_guide_types_titles_for_comparison_13 => "Sidekick";
	String get char_guide_types_titles_for_comparison_14 => "Guardian";
	String get char_guide_types_titles_for_comparison_15 => "Mentor";
	String get char_guide_types_titles_for_comparison_16 => "Impact";
	String get char_guide_types_titles_for_comparison_17 => "Antagonist's Helper";
	String get char_guide_types_titles_for_comparison_18 => "Antagonist";
	String get char_guide_types_titles_for_comparison_19 => "Skeptic";
	String get char_guide_types_titles_for_comparison_2 => "Escudero";
	String get char_guide_types_titles_for_comparison_20 => "Obstacle";
	String get char_guide_types_titles_for_comparison_21 => "Goal";
	String get char_guide_types_titles_for_comparison_3 => "Guardian";
	String get char_guide_types_titles_for_comparison_4 => "Mentor";
	String get char_guide_types_titles_for_comparison_5 => "De Impacto";
	String get char_guide_types_titles_for_comparison_6 => "Antagonista";
	String get char_guide_types_titles_for_comparison_7 => "Ayudante de Antagonista";
	String get char_guide_types_titles_for_comparison_8 => "Esceptico";
	String get char_guide_types_titles_for_comparison_9 => "Obstaculo";
	String get char_guide_types_titles_for_comparison_count => "22";
	String get character_add_age => "Age";
	String get character_add_bodybuild => "Bodybuild";
	String get character_add_defmoment => "Childhood moment";
	String get character_add_desire => "What he/she wants?";
	String get character_add_eyecolor => "Eye's color";
	String get character_add_gender => "Gender";
	String get character_add_haircolor => "Hair's color";
	String get character_add_height => "Height";
	String get character_add_name => "Name";
	String get character_add_need => "What he/she needs?";
	String get character_add_phrase => "Catchphrase";
	String get character_add_placebirth => "Place of Birth";
	String get character_add_profession => "Profession";
	String get character_add_role => "Role";
	String get character_add_trait => "Trait";
	String get character_basic_tv => "Basic";
	String get character_bio_title => "Biography";
	String get character_create => "Create Character";
	String get character_empty_text => "Seems that you don't have any character yet. Please go ahead and create a new one to get started.";
	String get character_list_tab => "Characters";
	String get character_notes_tv => "Notes";
	String get character_personality_tv => "Personality";
	String get character_random_btn => "Generate";
	String get character_save_btn => "Save";
	String get character_story_tv => "Story";
	String get character_tab => "Character Workshop";
	String get story_tab => "Story Workshop";
	String get character_update => "Edit Character";
	String get characters_created => "Characters Created";
	String get comments => "Comments";
	String get defmoment_array_0 => "parents got killed";
	String get defmoment_array_1 => "a big loss";
	String get defmoment_array_10 => "had a big accident";
	String get defmoment_array_11 => "was adopted";
	String get defmoment_array_12 => "moved to another city";
	String get defmoment_array_13 => "had no friends";
	String get defmoment_array_14 => "was paralyzed";
	String get defmoment_array_2 => "had a trip to a foreing country";
	String get defmoment_array_3 => "got lost";
	String get defmoment_array_4 => "witness a murder";
	String get defmoment_array_5 => "found an artifact";
	String get defmoment_array_6 => "hide a big secret";
	String get defmoment_array_7 => "parents divorced";
	String get defmoment_array_8 => "was bullied at school";
	String get defmoment_array_9 => "had a car accident";
	String get defmoment_array_count => "15";
	String get delete_character_btn => "Are you sure you want to delete this character?";
	String get delete_project_btn => "Are you sure you want to delete this project?";
	String get delete_project_btn_message => "All characters associated to it will be deleted";
	String get desire_array_0 => "to be loved";
	String get desire_array_1 => "to be fear";
	String get desire_array_10 => "to be good";
	String get desire_array_11 => "to be normal";
	String get desire_array_12 => "to be remembered";
	String get desire_array_13 => "to be respected";
	String get desire_array_14 => "to be someone else";
	String get desire_array_15 => "to be special";
	String get desire_array_16 => "to be beauty";
	String get desire_array_17 => "to be strong";
	String get desire_array_18 => "to cheat death";
	String get desire_array_19 => "comfort";
	String get desire_array_2 => "to be accepted";
	String get desire_array_20 => "to face fears";
	String get desire_array_21 => "fame";
	String get desire_array_22 => "fortune";
	String get desire_array_23 => "to find a purpose";
	String get desire_array_24 => "to find adventure";
	String get desire_array_25 => "to fit in";
	String get desire_array_26 => "freedom";
	String get desire_array_27 => "independence";
	String get desire_array_28 => "to get somewhere";
	String get desire_array_29 => "to leave town";
	String get desire_array_3 => "to be rich";
	String get desire_array_30 => "glory";
	String get desire_array_31 => "revange";
	String get desire_array_32 => "justice";
	String get desire_array_33 => "knowledge";
	String get desire_array_34 => "to not be lonely";
	String get desire_array_35 => "power";
	String get desire_array_36 => "redemption";
	String get desire_array_37 => "to repay a debt";
	String get desire_array_38 => "safety";
	String get desire_array_39 => "to stand out";
	String get desire_array_4 => "to achieve perfection";
	String get desire_array_40 => "to die";
	String get desire_array_41 => "to survive";
	String get desire_array_5 => "to apology";
	String get desire_array_6 => "to avoid conflict";
	String get desire_array_7 => "to avoid pain";
	String get desire_array_8 => "to be acknowledged";
	String get desire_array_9 => "to be bad";
	String get desire_array_count => "42";
	String get discover => "Discover";
	String get edit_projects_btn => "Edit project";
	String get edit_story => "Edit Story";
	String get edit_your_story => "Edit your story";
	String get email => "Email";
	String get eyecolors_0 => "Brown";
	String get eyecolors_1 => "Green";
	String get eyecolors_2 => "Light Green";
	String get eyecolors_3 => "Blue";
	String get eyecolors_4 => "Light Blue";
	String get eyecolors_5 => "Black";
	String get eyecolors_6 => "Light Brown";
	String get eyecolors_count => "7";
	String get eyes_bio => "eyes color";
	String get female_desire_bio => "In her mind she wants";
	String get female_moment_bio => "About her childhood we know that she";
	String get female_need_bio => "But is that what she really wants? Or she actually needs";
	String get female_notes_bio => "Notes";
	String get female_phrase_bio => "A phrase that people will commonly associate with her is";
	String get female_trait_bio => "Also her friends says that she is";
	String get gender_female => "Female";
	String get gender_female_article => "she";
	String get gender_female_posesive => "her";
	String get gender_male => "Male";
	String get gender_male_article => "he";
	String get gender_male_posesive => "his";
	String get gender_nonbinary_article => "they";
	String get gender_spinner_array_0 => "Gender";
	String get gender_spinner_array_1 => "Male";
	String get gender_spinner_array_2 => "Female";
	String get gender_spinner_array_3 => "Transgender";
	String get gender_spinner_array_4 => "Binary";
	String get gender_spinner_array_5 => "Non-Binary";
	String get gender_spinner_array_count => "6";
	String get genres_array_0 => "Tragedy";
	String get genres_array_1 => "Science fiction";
	String get genres_array_10 => "Horror";
	String get genres_array_11 => "Tragic comedy";
	String get genres_array_12 => "Young adult fiction";
	String get genres_array_13 => "Dystopia";
	String get genres_array_14 => "Action thriller";
	String get genres_array_15 => "Comedy";
	String get genres_array_2 => "Fantasy";
	String get genres_array_3 => "Mythology";
	String get genres_array_4 => "Adventure";
	String get genres_array_5 => "Mystery";
	String get genres_array_6 => "Drama";
	String get genres_array_7 => "Romance";
	String get genres_array_8 => "Action / Adventure";
	String get genres_array_9 => "Satire";
	String get genres_array_count => "16";
	String get go_to_most_likes => "Sort by Votes";
	String get go_to_most_recent => "Sort by Recent";
	String get go_to_my_story => "Show/Hide others stories";
	String get guide_character_btn => "Guide me";
	String get guides_fab => "Guides";
	String get hair_bio_1 => "with";
	String get hair_bio_2 => "hair and";
	String get haircolors_0 => "Brown";
	String get haircolors_1 => "Grey";
	String get haircolors_2 => "Black";
	String get haircolors_3 => "Wheat";
	String get haircolors_4 => "Silver";
	String get haircolors_5 => "Blond";
	String get haircolors_6 => "Red";
	String get haircolors_7 => "White";
	String get haircolors_count => "8";
	String get height_bio => "Being";
	String get heights_0 => "1.50 tall";
	String get heights_1 => "1.55 tall";
	String get heights_2 => "1.60 tall";
	String get heights_3 => "1.65 tall";
	String get heights_4 => "1.70 tall";
	String get heights_5 => "1.75 tall";
	String get heights_6 => "1.80 tall";
	String get heights_7 => "1.85 tall";
	String get heights_8 => "1.90 tall";
	String get heights_count => "9";
	String get hero_journey_tab => "The hero journey";
	String get herojourney_guide_desc => "The Hero with a Thousand Faces";
	String get herojourney_guide_desc_long => "There is several ways to write a book or a play. That's entirely up to you, however there are rules that when broken, the audience will notice.\n\nDive into Joseph Campbell's Hero Journey to find how to outline a compelling story.";
	String get herojourney_guide_title => "Joseph Campbell";
	String get hj_act1 => "Act 1: The Departure";
	String get hj_act2 => "Act 2: Initiation";
	String get hj_act3 => "Act 3: The Return";
	String get hj_desc_0 => "The hero is presented with a problem, challenge or adventure.The hero must face beginning of change.  This call must be accepted, this can happen willingly,reluctantly, consciously or accidentally";
	String get hj_desc_1 => "The hero doesn’t accept the call right away. This can happen for all sorts of reasons, such as being unwilling, being in denial or being kept from being able to respond.The hero finds motivation and or opportunity to answer the call.";
	String get hj_desc_10 => "The achievement of the goal or quest. The hero gets what he came for.";
	String get hj_desc_11 => "The hero may not want to return to the ordinary world.";
	String get hj_desc_12 => "Sometimes the hero must escape with the artifact he came for (e.g. the holy grail) and others come after him to claim it back. In this case, the journey back can be just as dangerous and full of adventure.";
	String get hj_desc_13 => "The hero often has (and needs) guides and helpers, sometimes the helpers are the one that need to bring him back to every day life. Especially if the hero has been severely wounded.";
	String get hj_desc_14 => "Now that he gained all this knowledge and experience, he needs to retain it and integrate it into his human life and or share it with the world.";
	String get hj_desc_15 => "This step occurs if the hero is a transcendental hero such as Jesus or Buddha. If the hero is human, this may be simply achieving a balance between the material and spiritual world. The hero becomes comfortable and competent in both the inner and outer world.";
	String get hj_desc_2 => "The hero is now committed to the quest (consciously or unconsciously) and his guide/ helper becomes known.Often, the mentor will present the hero with a talisman or artifact to aid him later in the quest.";
	String get hj_desc_3 => "The hero crosses into the field of adventure, leaving behind all that is known and stepping into the unknown. Here, the limits, rules and limits are not yet known.There is no going back, this is where the adventure gets going.";
	String get hj_desc_4 => "The belly of the whale represents the final separation from the known world of the hero. In this stage, he shows willingness to undergo change and adaptation.";
	String get hj_desc_5 => "This is a series of tests, tasks and ordeals that the hero must undergo in order to begin his transformation. Often the tests occur in threes and the hero usually fails one ore more.Sometimes, the heroes lose their mentor in this stage (e.g. LOTR and Star Wars).";
	String get hj_desc_6 => "The hero experiences a love that is all-powerful, encompassing and unconditional.";
	String get hj_desc_7 => "The hero faces temptation (physical or pleasurable) which make lead him to stray from his mission or even abandon it. This temptation does not necessary come from a woman.";
	String get hj_desc_8 => "The hero confronts the ultimate power in his life. This is the centre point of the story. All previous steps have brought him here and the steps to come move him away.";
	String get hj_desc_9 => "There is a period of rest, peace and fulfilment before the hero begins his journey home.";
	String get hj_desc_count => "16";
	String get hj_title_0 => "The call to adventure";
	String get hj_title_1 => "Refusal of the call";
	String get hj_title_10 => "The Ultimate Boon";
	String get hj_title_11 => "Refusal of the return";
	String get hj_title_12 => "The magic flight";
	String get hj_title_13 => "Rescue from without";
	String get hj_title_14 => "The crossing of the return threshold";
	String get hj_title_15 => "Master of two worlds";
	String get hj_title_2 => "Supernatural Aid";
	String get hj_title_3 => "The crossing of the First Threshold";
	String get hj_title_4 => "Belly of the whale";
	String get hj_title_5 => "The road of Trails";
	String get hj_title_6 => "The meeting with the Goddess";
	String get hj_title_7 => "Woman as Temptress";
	String get hj_title_8 => "Atonement with the father";
	String get hj_title_9 => "Apotheosis";
	String get hj_title_count => "16";
	String get home_desc => "If you love to write, then you're in the right place.\nI made this app because I also love writing as well but I know the struggle with writer's block, being lost or just losing focus.\nActually, I did this app for me but I believe it can also help you.\nThere are three things at the moment that you may find interesting.\n\nWriting prompts, whenever you're lost or you don't know how to start or how to continue, check them out. \nA simple sentence that will let your imagination fly away. And don't worry I'll post new ones weekly.\n\nThe Hero Journey. If you didn't read it, go running to get it! That's Joseph Campbell legacy for writers. \nHowever if you did read it and you want a refreshment, or you just want to go to the meat, check out The Hero Journey section, it contains all you have to know for your hero and it's \n\nLast but not least, check out the workshop. It contains what you need to track and develop your characters. Create a project, then add characters and don't worry if you are a bit block. I got your back with the generator function, that will generate traits, desires and needs for you.\n\nHave a great writing!";
	String get home_header => "Focus on writing…";
	String get home_tab => "Home";
	String get home_title => "The only thing that one\n really knows about human nature\n is that it changes.\n      Oscar Wilde";
	String get iap_btn => "No ads!";
	String get iap_desc => "Pro version with no Ads will be available on next update";
	String get iap_title => "It's coming soon";
	String get info => "Info";

	String get invitation_cta => "Read";
	String get invitation_deep_link => "com.plotgen.page.link";
	String get invitation_message => "Support my story in Auctor";
	String get invitation_title => "Auctor";
	String get job_bio => "Works as";
	String get lajos_character_desc => "Three-Dimensional characters";
	String get lajos_character_long => "Every object has three dimensions: depth, height, width. Human beings have an additional three dimensions:physiology; sociology; psychology. Without a knowledge of these three dimensions we cannot appraise a human being. It is not enough, in your study of a man, to know if he is rude, polite, religious, atheistic, moral, degenerate. You must know why";
	String get lajos_character_title => "3D Characters - Lajos Egri";
	String get lajos_text => "There is only one realm in which characters defy natural laws and remain the same–the realm of bar writing.\n- Lajos Egri -\n\nA real an compelling character will always have three dimensions, failing to do so, will result in a unrealistic, uncompelling character whose purpose is just to be there as a filler.\nNot all characters have to have three dimensions is true, but at least you have to focus on the main ones.\n\nLajos Egri on his book 'The Art of Dramatic Writing' wrote down three categories (hence the three dimensions) that your character has to have.\nTake a look below:\n\nPhysiology\n 1.Sex\n2.Age\n3.Height &amp; Weight\n4.Colour of hair, eyes, skin\n5.Posture\n6.Appearance: good-looking, over- or underweight, clean, neat, pleasant, untidy. Shape of head, face, limbs.\n7.Defects: deformities, abnormalities, birthmarks. Diseases.\n8.Heredity.\n\nSociology\n1.Class: lower, middle, upper.\n2.Occupation: type of work, hours of work, income, condition of work, union or nonunion, attitude towards organisation, suitability for work.\n3.Education: amount, kind of schools, marks, favourite subjects, poorest subjects, aptitudes.\n4.Home life: parents living, earning power, orphan, parents separated or divorced, parents’ habits, parents’ mental development, parents’ vices, neglect. Character’s marital status.\n5.Religion\n6.Race, nationality\n7.Place in community: leader among friends, clubs, sports.\n8.Political affiliations\n9.Amusements, hobbies: books, newspapers, magazines he reads.\n\nPsychology\n1.Sex life, moral standards\n2.Personal premise, ambition\n3.Frustrations, chief disappointments\n4.Temperament: choleric, easygoing, pessimistic, optimistic.\n5.Attitude towards life: resigned, militant, defeatist.\n6.Complexes: obsessions, inhibitions, superstitions, phobias.\n7.Extrovert, introvert, ambivert.\n8.Abilities: languages, talents.\n9.Qualities: imagination, judgement, taste, poise.\n10.I.Q.\n\n\n";
	String get likes => "Likes";
	String get male_desire_bio => "In his mind he wants";
	String get male_moment_bio => "About his childhood we know that he";
	String get male_need_bio => "But is that what he really wants? Or he actually needs";
	String get male_phrase_bio => "A phrase that people will commonly associate with him is";
	String get male_trait_bio => "Also his friends says that he is";
	String get must_login => "You must logged in to see your profile";
	String get my_profile => "Profile";
	String get name => "Name";
	String get navigation_drawer_open => "Open navigation drawer";
	String get need_array_0 => "to be accepted";
	String get need_array_1 => "to be loved";
	String get need_array_10 => "to come back home";
	String get need_array_11 => "to find love";
	String get need_array_12 => "to trust again";
	String get need_array_13 => "to be responsable";
	String get need_array_14 => "to grow up";
	String get need_array_15 => "to mature";
	String get need_array_16 => "to push his limits";
	String get need_array_17 => "to stop accepting the status-quo";
	String get need_array_2 => "to trust others";
	String get need_array_3 => "to runaway";
	String get need_array_4 => "to be acknowledged";
	String get need_array_5 => "to fight back";
	String get need_array_6 => "to confront fears";
	String get need_array_7 => "to stand his ground";
	String get need_array_8 => "to accept reality";
	String get need_array_9 => "to love his family";
	String get need_array_count => "18";
	String get nojob_bio => "at the moment is";
	String get notes_bio => "Notes";
	String get onBoardingTitle_1 => "Welcome to Auctor.";
	String get onBoardingTitle_2 => "Where all begins.";
	String get onBoardingTitle_3 => "Select your project.";
	String get onBoardingTitle_4 => "It's character time!";
	String get onBoardingTitle_5 => "Relax and enjoy.";
	String get onBoardingTitle_6 => "You know the drill.";
	String get onBoardingTitle_7 => "Voila!";
	String get onBoardingTitle_count => "8";
	String get onBoarding_1 => "Starting it's hard, probably harder than finishing.\nBut don't worry.\nWe got your back.\n\nGo ahead and press the + button to create your first project.";
	String get onBoarding_2 => "If you didn't yet, go and make a coffee.\n\nHere you will create the details of your project.\n\nTitle, Genre and briefly what it's your project about. We call that a 'PLOT SUMMARY'.\n\nDon't stress much, if you're not sure about something it can be changed later.\nClick save when you're ready. I will be waiting.";
	String get onBoarding_3 => "Here you will see all your projects. As many as you like to have.\n\nClick on the one you just created to get going.";
	String get onBoarding_4 => "Now you're getting the hang of this.\nPress the + button and choose create character";
	String get onBoarding_5 => "If you didn't yet, it's really time to get that coffee.\n\nHere you will create your first character. If you have no ideas, don't worry. Just make it random.\n\nOr a combination of it?. What about randomizing first and then freely editing what you feel it's needed? Go ahead and explore.\n\nAnd yes, you can edit this later.";
	String get onBoarding_6 => "Good work, here you will see all your characters.\n\nName, role and how developed it's.\n\nGo ahead, choose the character you just created to get going.";
	String get onBoarding_7 => "This is your character. Here you can have a quick snapshot of him/her.\n\nBut this is far from over. You're just starting. Check at the + button, you will unfold guidelines to keep developing your character.\n\nBut more important you also have challenges.\n\nI would love to tell you what are those. But you better see it by yourself.";
	String get onBoarding_count => "8";
	String get phrases_0 => "Maybe everybody in the whole damn world is scared of each other.";
	String get phrases_1 => "Life is to be lived, not controlled; and humanity is won by continuing to play in face of certain defeat.";
	String get phrases_10 => "History, Stephen said, is a nightmare from which I am trying to awake.";
	String get phrases_11 => "It is a great misfortune to be alone, my friends; and it must be believed that solitude can quickly destroy reason.";
	String get phrases_12 => "And meanwhile time goes about its immemorial work of making everyone look and feel like shit.";
	String get phrases_13 => "No man, for any considerable period, can wear one face to himself and another to the multitude, without finally getting bewildered as to which may be the true.";
	String get phrases_14 => "Nowadays people know the price of everything and the value of nothing.";
	String get phrases_15 => "No one forgets the truth; they just get better at lying.";
	String get phrases_16 => "She had waited all her life for something, and it had killed her when it found her.";
	String get phrases_17 => "We need never be ashamed of our tears.";
	String get phrases_18 => "Nothing is so painful to the human mind as a great and sudden change.";
	String get phrases_19 => "It is sometimes an appropriate response to reality to go insane.";
	String get phrases_2 => "Terror made me cruel";
	String get phrases_20 => "It doesn't matter who you are or what you look like, so long as somebody loves you.";
	String get phrases_21 => "I know. I was there. I saw the great void in your soul, and you saw mine.";
	String get phrases_22 => "Perhaps it was freedom itself that choked her.";
	String get phrases_23 => "Anyone who ever gave you confidence, you owe them a lot.";
	String get phrases_24 => "The only lies for which we are truly punished are those we tell ourselves.";
	String get phrases_25 => "I know not all that may be coming, but be it what it will, I’ll go to it laughing.";
	String get phrases_3 => "We were the people who were not in the papers. We lived in the blank white spaces at the edges of print. It gave us more freedom. We lived in the gaps between the stories.";
	String get phrases_4 => "It sounds plausible enough tonight, but wait until tomorrow. Wait for the common sense of the morning.";
	String get phrases_5 => "It's much better to do good in a way that no one knows anything about it.";
	String get phrases_6 => "Life appears to me too short to be spent in nursing animosity or registering wrongs.";
	String get phrases_7 => "You forget what you want to remember, and you remember what you want to forget.";
	String get phrases_8 => "Finally, from so little sleeping and so much reading, his brain dried up and he went completely out of his mind.";
	String get phrases_9 => "Memories warm you up from the inside. But they also tear you apart.";
	String get phrases_count => "26";
	String get placebirth_array_0 => "São Paulo - Brazil";
	String get placebirth_array_1 => "Bombay - India";
	String get placebirth_array_10 => "BANGKOK - Thailand";
	String get placebirth_array_11 => "BEIJING - China";
	String get placebirth_array_12 => "Delhi - India";
	String get placebirth_array_13 => "LONDON - UK";
	String get placebirth_array_14 => "HongKong - China";
	String get placebirth_array_15 => "CAIRO - Egypt";
	String get placebirth_array_16 => "TEHRAN - Iran";
	String get placebirth_array_17 => "BOGOTA - Colombia";
	String get placebirth_array_18 => "Bandung - Indonesia";
	String get placebirth_array_19 => "Tianjin - China";
	String get placebirth_array_2 => "JAKARTA - Indonesia";
	String get placebirth_array_20 => "LIMA - Peru";
	String get placebirth_array_21 => "Rio de Janeiro - Brazil";
	String get placebirth_array_22 => "Lahore - Pakistan";
	String get placebirth_array_23 => "SANTIAGO - Chile";
	String get placebirth_array_24 => "St Petersburg - Russia";
	String get placebirth_array_25 => "Shenyang - China";
	String get placebirth_array_26 => "Calcutta - India";
	String get placebirth_array_27 => "Wuhan - China";
	String get placebirth_array_28 => "Sydney - Australia";
	String get placebirth_array_29 => "Guangzhou - China";
	String get placebirth_array_3 => "Karachi - Pakistan";
	String get placebirth_array_30 => "SINGAPORE - Singapore";
	String get placebirth_array_31 => "Madras - India";
	String get placebirth_array_32 => "BAGHDAD - Iraq";
	String get placebirth_array_33 => "Pusan - South Korea";
	String get placebirth_array_34 => "Los Angeles (CA) - USA";
	String get placebirth_array_35 => "Yokohama - Japan";
	String get placebirth_array_36 => "DHAKA - Bangladesh";
	String get placebirth_array_37 => "BERLIN - Germany";
	String get placebirth_array_38 => "Alexandria - Egypt";
	String get placebirth_array_39 => "Bangalore - India";
	String get placebirth_array_4 => "MOSKVA (Moscow) - Russia";
	String get placebirth_array_40 => "Hyderabad - India";
	String get placebirth_array_41 => "Ho Chi Minh City - Vietnam";
	String get placebirth_array_42 => "Hanoi - Vietnam";
	String get placebirth_array_43 => "Haerbin - China";
	String get placebirth_array_44 => "ANKARA - Turkey";
	String get placebirth_array_45 => "BUENOS AIRES - Argentina";
	String get placebirth_array_46 => "Chengdu - China";
	String get placebirth_array_47 => "Ahmedabad - India";
	String get placebirth_array_48 => "Casablanca - Morocco";
	String get placebirth_array_49 => "Chicago (IL) - USA";
	String get placebirth_array_5 => "Istanbul - Turkey";
	String get placebirth_array_50 => "Xian - China";
	String get placebirth_array_51 => "MADRID - Spain";
	String get placebirth_array_52 => "Barcelona - Spain";
	String get placebirth_array_53 => "PYONGYANG - NorthKorea";
	String get placebirth_array_54 => "Nanjing - China";
	String get placebirth_array_55 => "KINSHASA - Congo (Zaire)";
	String get placebirth_array_56 => "ROMA - Italy";
	String get placebirth_array_57 => "Taipei - Taiwan";
	String get placebirth_array_58 => "Osaka - Japan";
	String get placebirth_array_59 => "KIEV - Ukraine";
	String get placebirth_array_6 => "MEXICO (Mexico City) - Mexico";
	String get placebirth_array_60 => "YANGON - Myanmar";
	String get placebirth_array_61 => "Toronto - Canada";
	String get placebirth_array_62 => "Taegu - South Korea";
	String get placebirth_array_63 => "ADDIS ABABA - Ethopia";
	String get placebirth_array_64 => "Jinan - China";
	String get placebirth_array_65 => "Salvador - Brazil";
	String get placebirth_array_66 => "Inchon - South Korea";
	String get placebirth_array_67 => "Giza - Egypt";
	String get placebirth_array_68 => "Changchun - China";
	String get placebirth_array_69 => "Havanna - Cuba";
	String get placebirth_array_7 => "Shanghai - China";
	String get placebirth_array_70 => "Nagoya - Japan";
	String get placebirth_array_71 => "Belo Horizonte - Brazil";
	String get placebirth_array_72 => "PARIS - France";
	String get placebirth_array_73 => "TASHKENT - Uzbekistan";
	String get placebirth_array_74 => "Cali - Colombia";
	String get placebirth_array_75 => "Guayaquil - Ecuador";
	String get placebirth_array_76 => "Taiyuan - China";
	String get placebirth_array_77 => "BRASILIA - Brazil";
	String get placebirth_array_78 => "BUCURESTI - Romania";
	String get placebirth_array_79 => "Faisalabad - Pakistan";
	String get placebirth_array_8 => "TOKYO - Japan";
	String get placebirth_array_80 => "Quezon City - Philippines";
	String get placebirth_array_81 => "Houston (TX) - USA";
	String get placebirth_array_82 => "Abidjan - Côte d’Ivorie";
	String get placebirth_array_83 => "Mashhad - Iran";
	String get placebirth_array_84 => "Medellín - Colombia";
	String get placebirth_array_85 => "Kanpur - India";
	String get placebirth_array_86 => "BUDAPEST - Hungary";
	String get placebirth_array_87 => "CARACAS - Venezuela";
	String get placebirth_array_88 => "Prague - Czech Republic";
	String get placebirth_array_9 => "New York (NY) - USA";
	String get placebirth_array_count => "89";
	String get placebirth_bio => "Born in";
	String get please_select_the_one_option => "Please select the one option";
	String get post => "Post";
	String get profession_array_0 => "Retail salespersons";
	String get profession_array_1 => "Retired";
	String get profession_array_10 => "Secretary";
	String get profession_array_11 => "Store clerk";
	String get profession_array_12 => "General manager";
	String get profession_array_13 => "Operation manager";
	String get profession_array_14 => "Auditing clerk";
	String get profession_array_15 => "Truck driver";
	String get profession_array_16 => "Sale representative";
	String get profession_array_17 => "Teacher";
	String get profession_array_18 => "Teacher assistant";
	String get profession_array_19 => "Repair worker";
	String get profession_array_2 => "Unemployed";
	String get profession_array_20 => "Accountant";
	String get profession_array_21 => "Security Guard";
	String get profession_array_22 => "Receptionist";
	String get profession_array_23 => "Information clerk";
	String get profession_array_24 => "Restaurant cook";
	String get profession_array_25 => "Housekeeping";
	String get profession_array_26 => "Construction laborer";
	String get profession_array_27 => "Police officer";
	String get profession_array_28 => "Sheriff";
	String get profession_array_29 => "Carpenter";
	String get profession_array_3 => "Cashier";
	String get profession_array_30 => "Fireman";
	String get profession_array_31 => "Merchant";
	String get profession_array_32 => "Sailor";
	String get profession_array_33 => "Ship Captain";
	String get profession_array_34 => "Mechanic";
	String get profession_array_35 => "Programmer";
	String get profession_array_36 => "IT consultant";
	String get profession_array_37 => "Lawyer";
	String get profession_array_38 => "Fortune teller";
	String get profession_array_39 => "Fast food cook";
	String get profession_array_4 => "Office clerk";
	String get profession_array_40 => "Electrician";
	String get profession_array_41 => "Dish washer";
	String get profession_array_42 => "Bartender";
	String get profession_array_43 => "Inspector";
	String get profession_array_44 => "Tester";
	String get profession_array_45 => "Human resource manager";
	String get profession_array_46 => "Machinist";
	String get profession_array_47 => "Hairdresser";
	String get profession_array_48 => "Postal service mail carrier";
	String get profession_array_49 => "Dental assistant";
	String get profession_array_5 => "Nurse";
	String get profession_array_6 => "Waiter";
	String get profession_array_7 => "Customer Service representative";
	String get profession_array_8 => "Janitor";
	String get profession_array_9 => "Cleaner";
	String get profession_array_count => "50";
	String get project_genre => "Genre";
	String get project_name => "Project Name";
	String get project_summary => "Plot Summary";
	String get projects_created => "Projects Created";
	String get projects_empty => "Really no name for your project? Try again with something more creative";
	String get projects_empty_text => "Seems that you don't have any project yet. Please go ahead and create a new one to get started.";
	String get projects_tab => "Projects";
	String get rate_app => "Help me improve it!";
	String get rate_app_des => "It's not easy to make an app. Even harder if it's for free. If you liked it!\nHelp me spread it by rating it.";
	String get rate_cancel => "Not yet";
	String get rate_submit => "Rate it!";
	String get remove_ads_product_id => "no_ads";
	String get remove_photo => "Remove Photo";

	String get roles_desc => "Roles";
	String get roles_desc_long => "Picture your story as an engine, it contains gears and cogs that needs to work together for your engine to move. Characters in a story are no different.Each character in your story has to have a role that moves the story forward, from the protagonist to the antagonist, but that's not all. What about the sidekicks? Or the Mentors? Dive in here to learn more about character roles";
	String get roles_title => "Typical character Roles";
	String get select_from_photo_gallery => "Select from Photo Gallery";
	String get share => "Share";
	String get sign_out => "Sign Out";
	String get submit_button => "Submit";
	String get submit_prompt => "Send your weekly challenge now!";
	String get submit_title => "Title";
	String get submit_welcome => "Welcome";
	String get themes_0 => "Light Theme";
	String get themes_1 => "Metal Theme";
	String get themes_2 => "Dark Theme";
	String get themes_3 => "Romance Theme";
	String get themes_4 => "Autumn Theme";
	String get themes_5 => "Black &amp; White Theme";
	String get themes_disclaimer => "You have to be premium to change your theme";
	String get trait_array_0 => "Aware";
	String get trait_array_1 => "Ambitious";
	String get trait_array_10 => "Creative";
	String get trait_array_11 => "Ethical";
	String get trait_array_12 => "Fair";
	String get trait_array_13 => "Devoted";
	String get trait_array_14 => "Maternal";
	String get trait_array_15 => "Inocent";
	String get trait_array_16 => "Kind";
	String get trait_array_17 => "Loving";
	String get trait_array_18 => "Selfless";
	String get trait_array_19 => "Sincere";
	String get trait_array_2 => "Altruistic";
	String get trait_array_20 => "Smart";
	String get trait_array_21 => "Intelligent";
	String get trait_array_22 => "Loyal";
	String get trait_array_23 => "Mature";
	String get trait_array_24 => "Modest";
	String get trait_array_25 => "Patient";
	String get trait_array_26 => "Witty";
	String get trait_array_27 => "Serious";
	String get trait_array_28 => "Fun";
	String get trait_array_29 => "Respectful";
	String get trait_array_3 => "Candid";
	String get trait_array_30 => "Responsable";
	String get trait_array_31 => "Hardworking";
	String get trait_array_32 => "Cheerful";
	String get trait_array_33 => "Cautious";
	String get trait_array_34 => "Helpful";
	String get trait_array_35 => "Open-minded";
	String get trait_array_36 => "Obedient";
	String get trait_array_37 => "Optimistic";
	String get trait_array_38 => "Organized";
	String get trait_array_39 => "Social";
	String get trait_array_4 => "Confident";
	String get trait_array_40 => "Strong";
	String get trait_array_41 => "Tough";
	String get trait_array_42 => "Good leader";
	String get trait_array_43 => "Good Friend";
	String get trait_array_44 => "Unpredictable";
	String get trait_array_5 => "Calm";
	String get trait_array_6 => "Brave";
	String get trait_array_7 => "Dependable";
	String get trait_array_8 => "Determined";
	String get trait_array_9 => "Easy-going";
	String get trait_array_count => "45";
	String get trigger_tab => "Weekly writing Prompts";
	String get triggers_list_0 => "He didn't tell anyone where he was going.";
	String get triggers_list_1 => "He opened the letter and quickly threw it in the fire.";
	String get triggers_list_10 => "She waited but nobody came.";
	String get triggers_list_11 => "High up on top of a green mountain.";
	String get triggers_list_12 => "It was the first time he holds a gun, but somehow it didn't feel strange.";
	String get triggers_list_13 => "His glare was harsh as he stared at the boy.";
	String get triggers_list_14 => "The river was beginning to break it's banks.";
	String get triggers_list_15 => "She wouldn’t even have time to pack.";
	String get triggers_list_16 => "The house looked different with new windows and doors.";
	String get triggers_list_17 => "The man tried to blend into the darkness, but she could see him.";
	String get triggers_list_18 => "That wasn't an animal, but a person either.";
	String get triggers_list_19 => "I'm sure what I saw. I just can’t explain it.";
	String get triggers_list_2 => "The brick in the wall of the old house was loose.";
	String get triggers_list_20 => "Is not that I don't believe him. It just that I don’t care.";
	String get triggers_list_21 => "It was dead way before I arrive.";
	String get triggers_list_22 => "Right now, I'm more afraid of living than dying.";
	String get triggers_list_23 => "That's not the deal we sign up for. But we had no way to go back.";
	String get triggers_list_24 => "I never thought I would forgive";
	String get triggers_list_25 => "I hear them downstairs…";
	String get triggers_list_26 => "There is something sweet about knowing you're going to die…";
	String get triggers_list_27 => "True friends don't leave you behind. I guess I wasn't a true friend after all.";
	String get triggers_list_28 => "I didn't take a Sherlock Holmes to realise that the knife was gone.";
	String get triggers_list_29 => "I don't believe in angels. Well, I didn't until then…";
	String get triggers_list_3 => "The normally busy street was empty.";
	String get triggers_list_30 => "I don't swear, I do never do. Not even then.";
	String get triggers_list_31 => "He check around to make sure nobody was watching. Then he put the USB in the pocket…";
	String get triggers_list_32 => "He looked at his rifle. It was long time since the last time…";
	String get triggers_list_33 => "Worse than a sunken ship. Is to be the only survivor.";
	String get triggers_list_34 => "I looked like a flu. We were sure it was a flu. The only problem was that I wasn't.";
	String get triggers_list_35 => "We were at war, a war we will lose. But you know, we were taught to fight to fight just to stand our ground, victory was a detail.";
	String get triggers_list_36 => "It was the worst financial crisis I ever saw. And I saw many.";
	String get triggers_list_37 => "I would have shot him on the spot. Except I got no bullets.";
	String get triggers_list_38 => "Wait. Is that a flashlight?";
	String get triggers_list_39 => "I didn't choose this profession. The profession chose me.";
	String get triggers_list_4 => "The key would no longer open the door.";
	String get triggers_list_40 => "Being in Africa at 42 degrees, wasn't the problem. The guy chasing me, certainly was.";
	String get triggers_list_41 => "Hired as a private investigator. My first big deal and it was a complete misunderstanding.";
	String get triggers_list_42 => "I would have call the police, except that I was the police, and I have no clue what to do.";
	String get triggers_list_43 => "The light was fading.";
	String get triggers_list_44 => "We almost drowned but I didn't care.";
	String get triggers_list_45 => "It was the first time I drove a truck, and I thought it would be also the last.";
	String get triggers_list_46 => "The sheriff stare at me for a second. I knew he knew, but neither of us said anything.";
	String get triggers_list_47 => "That day I missed her for first time.";
	String get triggers_list_48 => "It wasn't a problem that she left with another women, but it has to be my sister?";
	String get triggers_list_5 => "It was two in the morning as he lay there listening to the sounds.";
	String get triggers_list_6 => "More people crammed into the stadium.";
	String get triggers_list_7 => "Five old pennies in a velvet bag.";
	String get triggers_list_8 => "He ran, faster than he ever believed possible.";
	String get triggers_list_9 => "Those were screams, but certainly not humans";
	String get triggers_list_count => "49";
	String get view_participant => "Read";
	String get wc_most_voted => "Most voted";
	String get wc_mystory => "My story";
	String get wc_recent => "Recent";
	String get weekly_challenge_author => "By";
	String get weekly_challenge_db_name => "weekly_participants_en";
	String get weekly_challenge_desc_default => "If you see this text means you have no internet connection. Please check your internet and re-enter this section";
	String get weekly_challenge_email_desc => "Don't forget to add your name if you want to be named. And thanks for participating!";
	String get weekly_challenge_submit_btn => "Participate";
	String get weekly_challenge_tab1 => "On Going";
	String get weekly_challenge_tab2 => "Last winner";
	String get weekly_challenge_title_default => "No Connection";
	String get weekly_challenge_view_ad_btn => "View ad";
	String get weekly_challenge_view_ad_desc => "To keep this app free, in order to participate, I've to ask you to watch a quick ad.";
	String get write_a_comment => "Write a comment...";
	String get write_here_hint => "Write your story here";
	String get write_story => "Write Story";
	String get write_story_empty => "Please write your story!";
	String get writing_challenge_tab => "Weekly writing Challenge";
	String challenge_7_desc_long(String char_name1, String gender, String char_name2) => "Why do we care about $char_name1? What could happen if $gender doesn't succeed? How important is $char_name2 for the audience?";
	String challenge_7_q1(String char_name) => "Think about the most important choice that $char_name will have to make. What is at stake at that moment?";
	String challenge_7_q3(String char_name1, String char_name2) => "Now consider internally, what will be the moral, or psychological consequences for $char_name1 if the objective is not met? Forget about trauma, think deeper. Will be possible for $char_name2 to overcome the failure?";
	String challenge_7_q4(String char_name) => "Lastly what are the philosophical stakes? If the mother of Dragons doesn't stop the walkers, the evil and destruction will take over the world. What will happen in $char_name's case?";
	String challenge_8_desc_long(String char_name) => "Tell me how you live and I will tell you who you are.\n\nElaborate how ${char_name} lives and where.";
	String challenge_8_q1(String char_name) => "Does ${char_name} live in a house or an apartment? It's a barn? Or just a room? Describe the place.";
	String challenge_8_q2(String char_name) => "${char_name} stands in the middle of the biggest room, what can be seen? What's on the walls? Who put that there?.";
	String challenge_8_q4(String char_name) => "Open the windows, all of them. What does ${char_name} see from there? Can people see him? Can the noise from the street be heard? How noisy it's the place?";
	String get premium_body_test => "Go Premium to get:\n 3 new themes\nNo ads version\nShare your offline stories, or send them y Email.\nShare your characters via Emailto make sure you never lose them.Have an unlimited amount of projects! We are planning new updates that will bring a breath of fresh air for Auctor.\nNew features, refreshed design, improved stability.\nOur biggest resource for these plans is coffee.";
	String get challenge_ongoing_title_en => "Genre - Rust";
	String get challenge_ongoing_title_es => "Genero -  Oxido";
	String get challenge_ongoing_body_en => "It's Monday already and we are writing again!Every Monday to Wednesday we are doing a Genre challenge. It could be any genre, Love, Drama, Crimes, basically anything so stay tune!Science FictionJulia is in her workshop, fixing a pick up truck her neighbour asked her to.It’s really a waste of time, with all the bumps and the rust.But all she needs to do is fix the engine, and that’s something she knows a lot.So she does it. However, as she fights a particular screw that refuses to come out, she punches the side of the rusted metal and cuts her hand.She stares at it stumped, as she the blood that pops out of her body is green.As usual, to participate in the challenge, just write whatever this inspires you. A complete story? A piece of it? The beginning or the end?Don’t forget it’s a free app but you can purchase premium, to get some extra themes, remove ads, be able to share your stories and also support this app.Have fun!";
	String get challenge_ongoing_body_es =>"Ya es lunes, es tiempo de escribir!Todos los Lunes a Miercoles haremos el desafio de generos. Puede ser cualquier genero, Amor, Drama, Policial, lo que sea. No te lo pierdas!Ciencia FiccionJulia trabaja en su taller mecánico arreglando una vieja camioneta por encargo del vecino.Está realmente destruida, llena de golpes, rayones y óxido, pero lo único que le pidieron fue que repare el motor.Así que a eso se limita, de eso sí que sabe.No obstante, mientras forcejea con una tuerca particularmente ajustada, la herramienta se le zafa y se golpea con la chapa oxidada que le ocasiona un corte.El dolor la invade, pero también la desesperación al ver que la sangre que le brota es de color verde.Como siempre, para participar puedes escribir lo que te inspire. Una historia completa? Un pedazo de ella? Quizas el principio o el final?No te olvides que esto es una app gratis pero siempre puedes comprar el premium para obtener acceso a los temas, no mas ads, compartir la historia con tus amigos y sobretodo dar tu apoyo a esta app.Te quiero!.";
	String get challenge_ongoing_ad_en => "To keep this app free, in order to participate, I've to ask you to watch a quick ad.";
	String get who_alan_tab => 'Who is Alan Frixto?';
	String get premium_tab => 'Premium';
	String get add_outline => 'Outline';
	String get prompt_outline => 'Please enter information!';
	String get outline_empty => 'Plotting your novel can be an enormous challenge. You’ve had some time to begin developing your world and your characters, your moral gray area, and central conflicts, and now you face the daunting task of putting it all together into a coherent story—and making it interesting enough to get a reader hooked.\n\nThis road map is otherwise called an outline.';
	String get premiumOnly =>'Available for premium users';
	String get premiumOnlyPopTitle => "Project limit!";
	String get premiumOnlyPopBody => "Howdy, it looks like you\'re enjoying the app a lot! However you\'ve reached the limit of projects for this free version.\n\nBut don\'t worry! You can either become a Premium user to create unlimited projects among other awesome features.\n\nOr watch an AD to proceed and create a new project.";
	String get timeline_tab => 'Timeline';
	String get birthdate_add_text => 'Birthdate';
	String get triggers_submit_disclaimer =>'Creative triggers updates once a week in a random way. Thanks for contributing with this ever growing community of writers.';

	String get challenge_1_1 => 'challenge_1';
	String get challenge_1_2 => 'Challenge I';
	String get challenge_1_3 => 'Elevator Challenge';
	String get challenge_1_4 => 'How do you reacts in a crisis?\nLet\'s put him in a elevator with a random stranger.\nSuddenly the elevator gets stuck and they\'re both trap inside.\nHow does he reacts? Is he calm? Does he panic?\nThis exercise will allow you to discover how you behaves in limit situations.';
	String get challenge_1_5 => 'What is his first reaction?';
	String get challenge_1_6 => 'Will he wait to be rescued?';
	String get challenge_1_7 => 'The person next to him suddenly panics. Will your character call him down? Will he panic as well?';
	String get challenge_1_8 => 'After more than an hour trapped in the elevator suddendly there is a slit open. Come, says the voice, but I can take only one\nthe other should wait until more help comes. Will your character goes first?';

	String get challenge_2_1 => 'challenge_2';
	String get challenge_2_2 => 'Challenge II';
	String get challenge_2_3 => 'What\'s the lie?';
	String get challenge_2_4 => 'The Change Arc is all about the Lie Your Character Believes. His life may be horrible, or his life may seem pretty great. But, festering under the surface, is the Lie. In order for your character to evolve in a positive way, he has to start out with something lacking in his life, some reason that makes the change necessary. ';
	String get challenge_2_5 => 'What misconception does your protagonist have about himself or the world?';
	String get challenge_2_6 => 'Is the Lie making his life miserable when the story opens? If so, how?';
	String get challenge_2_7 => 'If not, will the Inciting Event and/or the First Plot Point begin to make him uncomfortable as a result of his Lie?';
	String get challenge_2_8 => 'What are the symptoms of your character’s lie?';

	String get challegne_3_1 => 'challenge_3';
	String get challegne_3_2 => 'Challenge III';
	String get challegne_3_3 => 'Backstory - Find the why!';
	String get challegne_3_4 => 'Who is your character today is very important, what\'s his job, what\'s his passion, etc. Who will he be is the meat of your story. That\'s what you\'re telling it. So what about his past? His past is why he is like this. Were his parents divorce? Perhaps his mother was an alcoholic, did his brother died in a tragic accident? Life events shape who we are.';
	String get challegne_3_5 => 'Describe briefly his close family, mother, father, siblings?. Are they all alive? Are the parents divorced? Happy family perhaps?';
	String get challegne_3_6 => 'What\'s his best childhood memory?';
	String get challegne_3_7 => 'What\'s his worst childhood memory?';
	String get challegne_3_8 => 'Did he had any friends when he was a child? How his friends back them will describe him? If he had no friends, why was it?';

	String get challenge_4_1 => 'challenge_4';
	String get challenge_4_2 => 'Challenge IV';
	String get challenge_4_3 => 'How he looks?';
	String get challenge_4_4 => 'Lajos Egri said that part of who you are, it\'s due to how you look. Dive in to discover how your character looks like';
	String get challenge_4_5 => 'Take a moment to reflect. Jot down 5 adjectives that will describe your character physically';
	String get challenge_4_6 => 'Does he has any birth mark? Tattoos perhaps that will make him unique? ';
	String get challenge_4_7 => 'There is any medical condition? Allergies? Something that manifest physically even if he can hide under his clothes?';
	String get challenge_4_8 => 'Consider his posture a little bit, can you describe it? Also, what about his appearance? Is he neat? Is he tidy? Will you say he is overall good looking?';

	String get challenge_5_1 => 'challenge_5';
	String get challenge_5_2 => 'Challenge V';
	String get challenge_5_3 => 'Test the limits.';
	String get challenge_5_4 => 'If coal and diamonds are basically the same thing, what make the coal so common and the diamond so rare? Pressure.\nSame is true in characters, do you want to know if your character is just one more in the crowd or is he the unique hero your story needs? Let\'s put pressure on him and find out who he really is.';
	String get challenge_5_5 => 'How would he react if someone he cares about is in danger?';
	String get challenge_5_6 => 'Will he be able to kill? ';
	String get challenge_5_7 => 'Will your character say that the end justify the means when it\'s about protecting a loved one?';
	String get challenge_5_8 => 'Let\'s says he doesn\'t dare to cross his own limits to save the life a person he cares. What within his limits/boundaries will he do to solve the situation?';

	String get challenge_6_1 => 'challenge_6';
	String get challenge_6_2 => 'Challenge VI';
	String get challenge_6_3 => 'What\'s in the pockets?';
	String get challenge_6_4 => 'Whatever you carry with you, speaks in a way about what you care. Will you carry something you don\'t care? You probably won\'t. Same it\'s true for your character. Dive in to discover what he/she has in the pockets, discover what he/she really cares about';
	String get challenge_6_5 => 'Your character it\s about to leave the house. What will he/she take and put in his pockets? Wallet? Keys? It\'s a car key? What car does she/he has?';
	String get challenge_6_6 => 'Open the wallet, is there a picture? Who is in the picture? Why it\'s there? Since when?';
	String get challenge_6_7 => 'Take the keys from his/her pocket, look carefully at the key chain. What is it? Where he/she got it? Was it a gift? Is it a country icon or flag? Which country?';
	String get challenge_6_8 => 'Does he/she carry a cellphone? Does it has battery? or it\'s always nearly empty when it\'s time to leave? Is the phone in silent mode? Look closer, what\'s the phone wall paper?';

	String get mentor_challenge_1 => 'mentor_challenge';
	String get mentor_challenge_2 => 'Mentor Challenge';
	String get mentor_challenge_3 => 'Know your mentor.';
	String get mentor_challenge_4 => 'Mentors are a rare type of characters. Not all the stories has one, but when they do, it has to be for a reason.\nWhat was Yoda motive to teach Luke Skywalker? Who put him on that swamp waiting to be discover? Did he only offered knowledge or also an artifact? Was this artifact the source of Luke\'s power?';
	String get mentor_challenge_5 => 'Why your protagonist needs a mentor? Why this particular one, will be exactly what he needs?';
	String get mentor_challenge_6 => 'Will the mentor give knowledge to the protagonist? Or he will help him to discover himself?';
	String get mentor_challenge_7 => 'Will your protagonist power be unlocked by an artifact given by the mentor? If so, which power and which artifact?';
	String get mentor_challenge_8 => 'Mentors die. As part of any dramatic journey, the mentor usually has to go a bit before the protagonist is actually ready. Or perhaps he is but he doesn\'t know it yet.\nAt which moment your mentor will leave or die? How will that be?';

	String get antagonist_challenge_1 => 'antagonist_challenge';
	String get antagonist_challenge_2 => 'Antagonist Challenge.';
	String get antagonist_challenge_3 => 'Know your Antagonist.';
	String get antagonist_challenge_4 => 'Stories are a power play. Nobody cares about the journey of "Mr I can do everything", if your protagonist is not facing some sort of obstacle that prevent him to get what he wants, then there is no challenge, and no challenge means no growth, which resumes to no story at all. However just adding obstacles for the sake of story is not a good practice either. Dig in to understand better who your antagonist really is, and what\'s his real role on your story.';
	String get antagonist_challenge_5 => 'The antagonist is the exact opposite of your protagonist. How in this case?';
	String get antagonist_challenge_6 => 'Your Antagonist is not just evil, he doesn\'t want to destroy the protagonist, unless this one gets on his way. So what is your Antagonist\'s ultimate goal?';
	String get antagonist_challenge_7 => 'What are the tactics he uses to reach his goals?';
	String get antagonist_challenge_8 => 'Think about the arc of change of your Antagonist. Does he start bad and ends bad? Not a great arc, then no? So how he is in Act 1, how he is in Act 3?';

	String get sidekick_challenge_1 => 'sidekick_challenge';
	String get sidekick_challenge_2 => 'Sidekick Challenge.';
	String get sidekick_challenge_3 => 'Know your Sidekick.';
	String get sidekick_challenge_4 => 'Sidekicks are often underestimated, But could Frodo reach his goal without Sam? Don Quixote was a complete character on his own, but can you imagine him fighting the windmills without Sancho Panza? Sidekicks have a reason to exist. Find your sidekick reason on this challenge.';
	String get sidekick_challenge_5 => 'Why your sidekick decides to follow your protagonist?';
	String get sidekick_challenge_6 => 'Why the goals of your protagonist are so strong that your sidekick decides to pursue them as well?';
	String get sidekick_challenge_7 => 'What are the tools, tactics or weapons that your sidekick provides to your protagonist? How he protects him or defend him?';
	String get sidekick_challenge_8 => 'Some sidekicks had a moment when they have to decide, if the protagonist worth their own lives. What\'s the case in yours? What\'s the most precious thing your sidekick will risk for your protagonist? Will be his life?';

	String get protagonist_challenge_1 => 'protagonist_challenge';
	String get protagonist_challenge_2 => 'Protagonist Challenge.';
	String get protagonist_challenge_3 => 'Know your protagonist.';
	String get protagonist_challenge_4 => 'Your protagonist is the character that matters most in the story. It is the axis of the story and whose success or failure matters. Will you achieve your goal at the end of the adventure? It is important that it is possible to empathize with the protagonist since if we do not care what happens to him, we will not care what happens in the story.';
	String get protagonist_challenge_5 => 'What do you have to do? What is the expectation of the story? The answer to this question should be answered interrogatively: Can Harry Potter defeat Voldemort?';
	String get protagonist_challenge_6 => 'What mobilizes it? What is the reason why you want to achieve your goal?';
	String get protagonist_challenge_7 => 'Can we identify with their motives? Does it make us want you to succeed? If we don\'t care, then we should rethink those reasons.';
	String get protagonist_challenge_8 => 'Do you have allies? Who are your opponents?';

	String get challenge_7_1 => 'challenge_7';
	String get challenge_7_2 => 'Challenge VII';
	String get challenge_7_3 => 'Stakes';
	String get challenge_7_4 => 'Why do we care about you? What could happen if gender doesn\'t succeed? How important is you for the audience?';
	String get challenge_7_5 => 'Think about the most important choice that you will have to make. What is at stake at that moment?';
	String get challenge_7_6 => 'Stakes can be external or physical. Think about what external consequences we will see if the objective is not reached? Will the world explode? A person will die? For instance in the movie \"Brave\" the mother of the protagonist will be forever a bear if the spell is not broken.';
	String get challenge_7_7 => 'Now consider internally, what will be the moral, or psychological consequences for you if the objective is not met? Forget about trauma, think deeper. Will be possible for you to overcome the failure?';
	String get challenge_7_8 => 'Lastly what are the philosophical stakes? If the mother of Dragons doesn\'t stop the walkers, the evil and destruction will take over the world. What will happen in your case?';

	String get challenge_8_1 => 'challenge_8';
	String get challenge_8_2 => 'Challenge VIII';
	String get challenge_8_3 => 'How he lives?';
	String get challenge_8_4 => 'Tell me how you live and I will tell you who you are.\n\nElaborate how you lives and where.';
	String get challenge_8_5 => 'Do you live in a house or an apartment? It\'s a barn? Or just a room? Describe the place.';
	String get challenge_8_6 => 'You stands in the middle of the biggest room, what can be seen? What\'s on the walls? Who put that there?.';
	String get challenge_8_7 => 'Go to the bedroom, how is it? Is it a double size bed? Is it a single one? Is the bed tidy? do you see anybody on the bed?';
	String get challenge_8_8 => 'Open the windows, all of them. What do you see from there? Can people see him? Can the noise from the street be heard? How noisy it\'s the place?';

	String get challenge_9_1 => 'challenge_9';
	String get challenge_9_2 => 'Challenge IX';
	String get challenge_9_3 => 'Crowded meeting';
	String get challenge_9_4 => 'One thing is how you behaves when he is by himself or in a chat among friends, but how would you react if arrives to a gathering where he knows just one person.';
	String get challenge_9_5 => 'Imagine that you arrives to the place and the only person he knows is not yet there. Will he initiate a conversation with the other guests or he will just wait in silence?';
	String get challenge_9_6 => 'Now, finally the person he knows it\'s there. you will include his friend into the conversation or he will be happy that finally there is somebody to talk to.';
	String get challenge_9_7 => 'Does he likes to be the center of attention? Are you extrovert or he just want survive another social gathering?';
	String get challenge_9_8 => 'Are you a polite and proper person, or he is politically incorrect and doesn\'t really care what people thinks about him.';

	String get challenge_10_1 => 'challenge_10';
	String get challenge_10_2 => 'Challenge X';
	String get challenge_10_3 => 'Holidays';
	String get challenge_10_4 => 'Not everybody reacts the same way in front of the same situation. If you  get confirmation on his job that he can takes holidays in six months, How would he react?';
	String get challenge_10_5 => 'Will he inmediately start planning the holidays? Will you look for offers and accommodations? Or he will wait to the last moment to decide what to do?';
	String get challenge_10_6 => 'If he did all the planning and a few days before the trip his flight is cancelled Will you be desperate or he will relax and find another solution?';
	String get challenge_10_7 => 'If he waits until the last moment, what will he do?';
	String get challenge_10_8 => 'Maybe he doesn\'t like to travel. Are you a person that enjoys routine and wants to stay at home?';

	String get empty_timeline =>'If you really want to develop your character, then start by outlining his life.\nWhen he was born, where and when he studied, and so on.\nTake the time to create small bits of his story as you go.\nIt\'s the best way to know him better';
	String get submit_your_challenge => 'Submite Your Challenge!';


}

class $en extends S {
	const $en();
}

class GeneratedLocalizationsDelegate extends LocalizationsDelegate<S> {
	const GeneratedLocalizationsDelegate();

	List<Locale> get supportedLocales {
		return const <Locale>[
			Locale("en", "es"),
		];
	}

	LocaleListResolutionCallback listResolution({Locale fallback, bool withCountry = true}) {
		return (List<Locale> locales, Iterable<Locale> supported) {
			if (locales == null || locales.isEmpty) {
				return fallback ?? supported.first;
			} else {
				return _resolve(locales.first, fallback, supported, withCountry);
			}
		};
	}

	LocaleResolutionCallback resolution({Locale fallback, bool withCountry = true}) {
		return (Locale locale, Iterable<Locale> supported) {
			return _resolve(locale, fallback, supported, withCountry);
		};
	}

	@override
	Future<S> load(Locale locale) {
		final String lang = getLang(locale);
		if (lang != null) {
			switch (lang) {
				case "en":
					S.current = const $en();
					return SynchronousFuture<S>(S.current);
				default:
				// NO-OP.
			}
		}
		S.current = const S();
		return SynchronousFuture<S>(S.current);
	}

	@override
	bool isSupported(Locale locale) => _isSupported(locale, true);

	@override
	bool shouldReload(GeneratedLocalizationsDelegate old) => false;

	///
	/// Internal method to resolve a locale from a list of locales.
	///
	Locale _resolve(Locale locale, Locale fallback, Iterable<Locale> supported, bool withCountry) {
		if (locale == null || !_isSupported(locale, withCountry)) {
			return fallback ?? supported.first;
		}

		final Locale languageLocale = Locale(locale.languageCode, "");
		if (supported.contains(locale)) {
			return locale;
		} else if (supported.contains(languageLocale)) {
			return languageLocale;
		} else {
			final Locale fallbackLocale = fallback ?? supported.first;
			return fallbackLocale;
		}
	}

	///
	/// Returns true if the specified locale is supported, false otherwise.
	///
	bool _isSupported(Locale locale, bool withCountry) {
		if (locale != null) {
			for (Locale supportedLocale in supportedLocales) {
				// Language must always match both locales.
				if (supportedLocale.languageCode != locale.languageCode) {
					continue;
				}

				// If country code matches, return this locale.
				if (supportedLocale.countryCode == locale.countryCode) {
					return true;
				}

				// If no country requirement is requested, check if this locale has no country.
				if (true != withCountry && (supportedLocale.countryCode == null || supportedLocale.countryCode.isEmpty)) {
					return true;
				}
			}
		}
		return false;
	}
}

String getLang(Locale l) => l == null
	? null
	: l.countryCode != null && l.countryCode.isEmpty
	? l.languageCode
	: l.toString();
